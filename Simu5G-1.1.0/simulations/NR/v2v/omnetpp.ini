# Example simulation for integrating veins (http://veins.car2x.org/) with Simu5G
# 
# Requirements:
#       You need to enable the feature "Simu5G Cars" for this simulation
#       (Project->Properties->OMNeT++->Project Features)
#
#       You need to import the "veins" project and its subproject
#       "veins_inet" in your workspace.
[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
image-path = ../../images
network = simu5g.simulations.NR.v2v.Highway

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = false
print-undisposed = false

sim-time-limit = 300s

**.sctp.**.scalar-recording = false
**.sctp.**.vector-recording = false
**.routingRecorder.enabled = false

*.playgroundSizeX = 20000m
*.playgroundSizeY = 20000m
*.playgroundSizeZ = 50m

##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost"       # if traci-launchd runs on localhost
*.veinsManager.moduleType = "simu5g.nodes.cars.NRCar"
*.veinsManager.moduleName = "car"
#*.veinsManager.launchConfig = xmldoc("heterogeneous.launchd.xml")
*.veinsManager.launchConfig = xmldoc("grid.launchd.xml")
*.veinsManager.updateInterval = 0.1s

##########################################################
#                      Mobility                          #
##########################################################
*.car[*].mobilityType = "VeinsInetMobility"


##########################################################
#              LTE specific parameters                   #
##########################################################

# Number of Resource Blocks
**.numBands = 25 

# Transmission Power
**.ueTxPower = 26
**.eNodeBTxPower = 46

# Enable dynamic association of UEs (based on best SINR)
*.car[*].cellularNic.nrPhy.dynamicCellAssociation = true
*.car[*].masterId = 0     # ignored if dynamic association is disabled
*.car[*].macCellId = 0    # ignored if dynamic association is disabled
*.car[*].nrMasterId = 1     # ignored if dynamic association is disabled
*.car[*].nrMacCellId = 1    # ignored if dynamic association is disabled

# eNodeB configuration
**.gNodeB1.macCellId = 1
**.gNodeB1.macNodeId = 1
**.gNodeB2.macCellId = 2
**.gNodeB2.macNodeId = 2 


# Enable handover
*.car[*].cellularNic.nrPhy.enableHandover = true
*.gNodeB*.cellularNic.phy.enableHandover = true
*.gNodeB*.cellularNic.phy.handoverLatency = 50ms
*.gNodeB*.cellInfo.broadcastMessageInterval = 1s # eNB will sends broadcast triggers every second

# X2 and SCTP configuration
*.gNodeB*.numX2Apps = 1    # one x2App per peering eNodeB
*.gNodeB*.x2App[*].server.localPort = 5000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
*.gNodeB1.x2App[0].client.connectAddress = "gNodeB2%x2ppp0" 
*.gNodeB2.x2App[0].client.connectAddress = "gNodeB1%x2ppp0" 
**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
**.sctp.enableHeartbeats = false


# ----------------------------------------------------------------------------- #
# Config "V2V"
#
# In this configuration, UEs run a V2V application (using UDP as transport layer protocol)
# They communicate using the D2D link, if they are under the same cell
#


[Config V2V]

**.amcMode = "D2D"

# D2D-capable flows are started in D2D mode
*.car[*].cellularNic.d2dInitialMode = true

# --- Select CQI for D2D transmissions --- #
# To enable the reporting of CQIs for each D2D link, set the parameter *.gNodeB.cellularNic.phy.enableD2DCqiReporting
# To use fixed CQI, set the parameter **.usePreconfiguredTxParams and select the desired CQI using the parameter **.d2dCqi
*.gNodeB*.cellularNic.nrPhy.enableD2DCqiReporting = true
**.usePreconfiguredTxParams = false

# each car transmits using D2D to the following one 
*.car[*].numApps = 2

*.car[*].app[0].typename = "V2VVehicleSender"
*.car[*].app[0].destAddress = "car[62]"
*.car[*].app[0].destPort = 3062
*.car[*].app[0].localPort = 3000

*.car[*].app[1].typename = "V2VVehicleReceiver"
*.car[*].app[1].localPort = 3062






# ----------------------------------------------------------------------------- #
# Config "D2DMulticast"
#
# In this configuration, a transmitting car sends periodic alert messages to neighboring vehicles
#
[Config v2vbroadcast]
**.amcMode = "D2D"

# D2D-capable flows are started in D2D mode
*.car[*].cellularNic.d2dInitialMode = true


**.enableD2DCqiReporting = false
**.usePreconfiguredTxParams = true

### Traffic configuration: one-to-many traffic between UEs (car[0] --> car[1..9]) ###
*.car[*].numApps = 2

*.car[*].app[0].typename = "V2VVehicleSender"
*.car[*].app[0].destPort = 3010
*.car[*].app[0].destAddress = "224.0.0.10"          # IP address of the multicast group 
*.car[*].app[0].localPort = 3088 + ancestorIndex(0)

*.car[*].app[1].typename = "V2VVehicleReceiver"
*.car[*].app[1].localPort = 3010

# enrolled multicast groups must be set in the HostAutoConfigurator (instead of demo.xml), seperated by a single space character
*.car[*].configurator.mcastGroups = "224.0.0.10"



