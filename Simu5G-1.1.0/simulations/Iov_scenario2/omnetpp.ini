[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
image-path = ../../images
network = simu5g.simulations.Iov_scenario2.IovScenario  # 修正网络模型路径

# Simulation parameters
debug-on-errors = true  # 启用调试以查看详细错误信息
print-undisposed = true  # 显示未处理的对象，有助于调试
sim-time-limit=70s
**.udp.e2eDelay.vector-recording = true
*.rsu.udp.scalar-recording = true
*.car[0].udp.scalar-recording = true

*.playgroundSizeX = 20000m
*.playgroundSizeY = 20000m
*.playgroundSizeZ = 50m

# VeinsManager parameters
*.veinsManager.host = "localhost"
*.veinsManager.port = 9999  # 添加端口配置
*.veinsManager.moduleType = "simu5g.nodes.cars.Car"
*.veinsManager.moduleName = "car"
*.veinsManager.launchConfig = xmldoc("heterogeneous.launchd.xml")
*.veinsManager.updateInterval = 0.1s
*.veinsManager.autoShutdown = true  # 自动关闭SUMO
*.veinsManager.margin = 25  # 增加边界余量
*.veinsManager.launchd.sumocfg = "heterogeneous.sumocfg"  # 明确指定SUMO配置文件

# Mobility parameters for dynamic nodes (cars)
*.car[*].mobilityType = "VeinsInetMobility"

# LTE specific parameters
**.numBands = 25
**.ueTxPower = 26
**.eNodeBTxPower = 46
**.sinrThreshold = 0dB

# Dynamic cell association for mobile nodes
*.car[*].cellularNic.phy.dynamicCellAssociation = true
**.car[*].masterId = 1
**.car[*].macCellId = 1

# --- RSU moved to wired StandardHost: remove UE-specific configs ---
# (Deleted) *.rsu.cellularNic.phy.dynamicCellAssociation = true
# (Deleted) *.rsu.masterId = 1
# (Deleted) *.rsu.macCellId = 1
# (Deleted) *.rsu.mobilityType = "StationaryMobility"
# (Deleted) *.rsu.mobility.initialX = 561m
# (Deleted) *.rsu.mobility.initialY = 42m
# (Deleted) *.rsu.mobility.initialZ = 0m
# (Deleted) *.rsu.cellularNic.phy.ueTxPower = 30mW

# (Deleted) Register RSU as UE with Binder
# *.binder.ueList = "rsu car[*]"

# eNodeB configuration
**.eNodeB1.macCellId = 1
**.eNodeB1.macNodeId = 1
**.eNodeB2.macCellId = 2
**.eNodeB2.macNodeId = 2

# Enable handover
*.car[*].cellularNic.phy.enableHandover = true
*.eNodeB*.cellularNic.phy.enableHandover = true
*.eNodeB*.cellularNic.phy.handoverLatency = uniform(40ms, 60ms)
*.eNodeB*.cellInfo.broadcastMessageInterval = 1s

# X2 and SCTP configuration
*.eNodeB1.numX2Apps = 2
*.eNodeB2.numX2Apps = 2
*.eNodeB3.numX2Apps = 2

# eNodeB1 connections
*.eNodeB1.x2App[0].client.connectAddress = "eNodeB2%x2ppp0"
*.eNodeB1.x2App[1].client.connectAddress = "eNodeB3%x2ppp0"

# eNodeB2 connections
*.eNodeB2.x2App[0].client.connectAddress = "eNodeB1%x2ppp0"
*.eNodeB2.x2App[1].client.connectAddress = "eNodeB3%x2ppp0"

# eNodeB3 connections
*.eNodeB3.x2App[0].client.connectAddress = "eNodeB1%x2ppp0"
*.eNodeB3.x2App[1].client.connectAddress = "eNodeB2%x2ppp0"

# Common X2 configuration
**.eNodeB*.x2App[*].server.localPort = 5000 + ancestorIndex(1)
**.eNodeB*.x2App[*].client.connectPort = 5000
**.eNodeB*.x2App[*].client.startTime = 0.5s
**.sctp.nagleEnabled = false
**.sctp.enableHeartbeats = false

# --- 自动泊车配置 ---
[Config AutoParking]
# RSU 应用: 通过以太网连接到路由器，直接向车辆发送 UDP
*.rsu.numApps = 1
*.rsu.app[0].typename = "simu5g.apps.autoparking.AutoParkingRsuApp"
*.rsu.app[0].localPort = 4000
*.rsu.app[0].destPort = 6000    # 车辆应用监听的基础端口
*.rsu.app[0].messageLength = 256B
*.rsu.app[0].sendInterval = 1000s
*.rsu.app[0].checkInterval = 1s
*.rsu.app[0].monitoredLanes = "0/0to1/0_0"  # 只监控parkingArea_1所在的车道
*.rsu.app[0].parkingProbability = 0.5
*.rsu.app[0].parkingAreasFile = "parkingAreas.xml"

# 服务器应用: 在这个简化场景中不再需要
*.server.numApps = 0

# 车辆应用: 接收指令并执行泊车
*.car[*].numApps = 1
*.car[*].app[0].typename = "simu5g.apps.autoparking.AutoParkingCarApp"
*.car[*].app[0].localPort = 6000
*.car[*].app[0].smoothParking = true
*.car[*].app[0].responseTime = 1.0s
*.car[*].app[0].maxWaitingTime = 100s  # 更新参数名以匹配 .ned
*.car[*].app[0].checkInterval = 1s    # 新增：设置位置检查间隔

# 统计信息收集
*.rsu.app[0].parkingCommandSent:count.result-recording-modes = all
*.car[*].app[0].parkingCommandReceived:count.result-recording-modes = all
*.car[*].app[0].parkingExecuted:count.result-recording-modes = all
*.car[*].app[0].endToEndDelay:vector.result-recording-modes = all